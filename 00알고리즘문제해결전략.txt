문제 해결 전략

문제 이해
문제 수학화
설계 : 알고리즘과 자료구조
	비슷한 문제를 풀어본 적이 있던가?
	단순한 방법에서 시작할 수 있을까?
	내가 문제를 푸는 과정을 수식화할 수 있을까?
	문제를 단순화할 수 없을까?
	그림으로 그려볼 수 있을까?
	수식으로 표현할 수 있을까?
	문제를 분해할 수 있을까?
	뒤에서부터 생각해서 문제를 풀 수 있을까?
	순서를 강제할 수 있을까?
	특정 형태의 답만을 고려할 수 있을까?
검증 : 정당성, 시간, 메모리
구현
	코딩의 중요성을 간과하지 말라
	간결한 코드를 작성하기
	적극적으로 코드를 재사용하기
	표준 라이브러리 공부하기
	항상 같은 형태로 프로그램을 작성하기
	일관적이고 명료한 명명법 사용하기
	모든 자료를 정규화해서 저장하기
	코드와 데이터를 분리하기	
복습 : 두 번 풀기

자주하는 실수
	산술 오버플로
	배열 범위 밖 원소에 접근
	일관되지 않은 범위 표현 방식 사용하기
	Off-by-one 오류
	컴파일러가 잡아주지 못하는 상수 오타
	스택 오버플로우
	다차원 배열 인덱스 순서 바꿔쓰기
	잘못된 비교함수 작성
	최소, 최대 예외 잘못 다루기
	연산자 우선순위 잘못 쓰기
	너무 느린 입출력 방식 선택
	변수 초기화 문제
